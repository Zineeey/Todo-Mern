{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Todo-Mern\\\\todo\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useTodoContext } from \"../hooks/useTodoContext\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nconst TodoForm = ({\n  todo = null,\n  setIsEditing = null\n}) => {\n  _s();\n  const {\n    dispatch\n  } = useTodoContext();\n  const [title, setTitle] = useState('');\n  const [time, setTime] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  useEffect(() => {\n    if (todo) {\n      setTitle(todo.title);\n      setTime(todo.time);\n      setCompleted(todo.completed);\n    }\n  }, [todo]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await MySwal.fire({\n      title: 'Are you sure?',\n      text: todo ? 'Do you want to update this task?' : 'Do you want to add this new task?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, submit!',\n      cancelButtonText: 'Cancel'\n    });\n    if (result.isConfirmed) {\n      const newTodo = {\n        title,\n        time,\n        completed\n      };\n      let url = '/api/todos/create';\n      let method = 'POST';\n      if (todo) {\n        url = `/api/todos/${todo._id}`;\n        method = 'PATCH';\n      }\n      const response = await fetch(url, {\n        method,\n        body: JSON.stringify(newTodo),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message);\n        setEmptyFields(data.emptyFields);\n      }\n      if (response.ok) {\n        setEmptyFields([]);\n        setTitle('');\n        setTime('');\n        setCompleted(false);\n        setError(null);\n        if (todo) {\n          dispatch({\n            type: 'UPDATE_TODO',\n            payload: data\n          });\n          setIsEditing(false);\n        } else {\n          dispatch({\n            type: 'CREATE_TODO',\n            payload: data\n          });\n        }\n        await MySwal.fire({\n          title: 'Success!',\n          text: todo ? 'Task updated successfully!' : 'New task added successfully!',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: todo ? 'Edit Task' : 'Add a new Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Task Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Task Time:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: time,\n      onChange: e => setTime(e.target.value),\n      className: emptyFields.includes('time') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), todo && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Task Status:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), todo && /*#__PURE__*/_jsxDEV(\"select\", {\n      value: completed,\n      onChange: e => setCompleted(e.target.value === 'true'),\n      className: emptyFields.includes('completed') ? 'error' : '',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: false,\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: true,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: todo ? 'Update Task' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"TkETYo78yIJrk2oUu0CTGaSbpEk=\", false, function () {\n  return [useTodoContext];\n});\n_c2 = TodoForm;\nexport default TodoForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"TodoForm\");","map":{"version":3,"names":["useState","useEffect","useTodoContext","Swal","withReactContent","jsxDEV","_jsxDEV","MySwal","_c","TodoForm","todo","setIsEditing","_s","dispatch","title","setTitle","time","setTime","completed","setCompleted","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","result","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","newTodo","url","method","_id","response","fetch","body","JSON","stringify","headers","data","json","ok","message","type","payload","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","includes","_c2","$RefreshReg$"],"sources":["D:/Projects/Todo-Mern/todo/src/components/TodoForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useTodoContext } from \"../hooks/useTodoContext\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst TodoForm = ({ todo = null, setIsEditing = null }) => {\r\n    const { dispatch } = useTodoContext();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [completed, setCompleted] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [emptyFields, setEmptyFields] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (todo) {\r\n            setTitle(todo.title);\r\n            setTime(todo.time);\r\n            setCompleted(todo.completed);\r\n        }\r\n    }, [todo]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const result = await MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: todo ? 'Do you want to update this task?' : 'Do you want to add this new task?',\r\n            icon: 'question',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, submit!',\r\n            cancelButtonText: 'Cancel'\r\n        });\r\n\r\n        if (result.isConfirmed) {\r\n            const newTodo = { title, time, completed };\r\n\r\n            let url = '/api/todos/create';\r\n            let method = 'POST';\r\n\r\n            if (todo) {\r\n                url = `/api/todos/${todo._id}`;\r\n                method = 'PATCH';\r\n            }\r\n\r\n            const response = await fetch(url, {\r\n                method,\r\n                body: JSON.stringify(newTodo),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                setError(data.message);\r\n                setEmptyFields(data.emptyFields);\r\n            }\r\n            if (response.ok) {\r\n                setEmptyFields([]);\r\n                setTitle('');\r\n                setTime('');\r\n                setCompleted(false);\r\n                setError(null);\r\n\r\n                if (todo) {\r\n                    dispatch({ type: 'UPDATE_TODO', payload: data });\r\n                    setIsEditing(false);\r\n                } else {\r\n                    dispatch({ type: 'CREATE_TODO', payload: data });\r\n                }\r\n\r\n                await MySwal.fire({\r\n                    title: 'Success!',\r\n                    text: todo ? 'Task updated successfully!' : 'New task added successfully!',\r\n                    icon: 'success',\r\n                    confirmButtonText: 'OK'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"create-form\" onSubmit={handleSubmit}>\r\n            <h3>{todo ? 'Edit Task' : 'Add a new Task'}</h3>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            <label>Task Title:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                className={emptyFields.includes('title') ? 'error' : ''}\r\n            />\r\n\r\n            <label>Task Time:</label>\r\n            <input\r\n                type=\"time\"\r\n                value={time}\r\n                onChange={(e) => setTime(e.target.value)}\r\n                className={emptyFields.includes('time') ? 'error' : ''}\r\n            />\r\n\r\n            {todo && (\r\n                <label>Task Status:</label>\r\n            )}\r\n            {todo && (\r\n                <select\r\n                    value={completed}\r\n                    onChange={(e) => setCompleted(e.target.value === 'true')}\r\n                    className={emptyFields.includes('completed') ? 'error' : ''}\r\n                >\r\n                    <option value={false}>Pending</option>\r\n                    <option value={true}>Completed</option>\r\n                </select>\r\n            )}\r\n            <button>{todo ? 'Update Task' : 'Add Task'}</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGH,gBAAgB,CAACD,IAAI,CAAC;AAACK,EAAA,GAAhCD,MAAM;AAEZ,MAAME,QAAQ,GAAGA,CAAC;EAAEC,IAAI,GAAG,IAAI;EAAEC,YAAY,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM;IAAEC;EAAS,CAAC,GAAGX,cAAc,CAAC,CAAC;EAErC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,IAAIS,IAAI,EAAE;MACNK,QAAQ,CAACL,IAAI,CAACI,KAAK,CAAC;MACpBG,OAAO,CAACP,IAAI,CAACM,IAAI,CAAC;MAClBG,YAAY,CAACT,IAAI,CAACQ,SAAS,CAAC;IAChC;EACJ,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,MAAM,GAAG,MAAMpB,MAAM,CAACqB,IAAI,CAAC;MAC7Bd,KAAK,EAAE,eAAe;MACtBe,IAAI,EAAEnB,IAAI,GAAG,kCAAkC,GAAG,mCAAmC;MACrFoB,IAAI,EAAE,UAAU;MAChBC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,cAAc;MACjCC,gBAAgB,EAAE;IACtB,CAAC,CAAC;IAEF,IAAIN,MAAM,CAACO,WAAW,EAAE;MACpB,MAAMC,OAAO,GAAG;QAAErB,KAAK;QAAEE,IAAI;QAAEE;MAAU,CAAC;MAE1C,IAAIkB,GAAG,GAAG,mBAAmB;MAC7B,IAAIC,MAAM,GAAG,MAAM;MAEnB,IAAI3B,IAAI,EAAE;QACN0B,GAAG,GAAG,cAAc1B,IAAI,CAAC4B,GAAG,EAAE;QAC9BD,MAAM,GAAG,OAAO;MACpB;MAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;QAC9BC,MAAM;QACNI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO,CAAC;QAC7BS,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QACd1B,QAAQ,CAACwB,IAAI,CAACG,OAAO,CAAC;QACtBzB,cAAc,CAACsB,IAAI,CAACvB,WAAW,CAAC;MACpC;MACA,IAAIiB,QAAQ,CAACQ,EAAE,EAAE;QACbxB,cAAc,CAAC,EAAE,CAAC;QAClBR,QAAQ,CAAC,EAAE,CAAC;QACZE,OAAO,CAAC,EAAE,CAAC;QACXE,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;QAEd,IAAIX,IAAI,EAAE;UACNG,QAAQ,CAAC;YAAEoC,IAAI,EAAE,aAAa;YAAEC,OAAO,EAAEL;UAAK,CAAC,CAAC;UAChDlC,YAAY,CAAC,KAAK,CAAC;QACvB,CAAC,MAAM;UACHE,QAAQ,CAAC;YAAEoC,IAAI,EAAE,aAAa;YAAEC,OAAO,EAAEL;UAAK,CAAC,CAAC;QACpD;QAEA,MAAMtC,MAAM,CAACqB,IAAI,CAAC;UACdd,KAAK,EAAE,UAAU;UACjBe,IAAI,EAAEnB,IAAI,GAAG,4BAA4B,GAAG,8BAA8B;UAC1EoB,IAAI,EAAE,SAAS;UACfE,iBAAiB,EAAE;QACvB,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAM6C,SAAS,EAAC,aAAa;IAACC,QAAQ,EAAE5B,YAAa;IAAA6B,QAAA,gBACjD/C,OAAA;MAAA+C,QAAA,EAAK3C,IAAI,GAAG,WAAW,GAAG;IAAgB;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC/CrC,KAAK,iBAAId,OAAA;MAAK6C,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAEjC;IAAK;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CnD,OAAA;MAAA+C,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BnD,OAAA;MACI2C,IAAI,EAAC,MAAM;MACXS,KAAK,EAAE5C,KAAM;MACb6C,QAAQ,EAAGlC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;MAC1CP,SAAS,EAAE7B,WAAW,CAACuC,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG;IAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAEFnD,OAAA;MAAA+C,QAAA,EAAO;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBnD,OAAA;MACI2C,IAAI,EAAC,MAAM;MACXS,KAAK,EAAE1C,IAAK;MACZ2C,QAAQ,EAAGlC,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;MACzCP,SAAS,EAAE7B,WAAW,CAACuC,QAAQ,CAAC,MAAM,CAAC,GAAG,OAAO,GAAG;IAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,EAED/C,IAAI,iBACDJ,OAAA;MAAA+C,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAC7B,EACA/C,IAAI,iBACDJ,OAAA;MACIoD,KAAK,EAAExC,SAAU;MACjByC,QAAQ,EAAGlC,CAAC,IAAKN,YAAY,CAACM,CAAC,CAACmC,MAAM,CAACF,KAAK,KAAK,MAAM,CAAE;MACzDP,SAAS,EAAE7B,WAAW,CAACuC,QAAQ,CAAC,WAAW,CAAC,GAAG,OAAO,GAAG,EAAG;MAAAR,QAAA,gBAE5D/C,OAAA;QAAQoD,KAAK,EAAE,KAAM;QAAAL,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCnD,OAAA;QAAQoD,KAAK,EAAE,IAAK;QAAAL,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACX,eACDnD,OAAA;MAAA+C,QAAA,EAAS3C,IAAI,GAAG,aAAa,GAAG;IAAU;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEf,CAAC;AAAA7C,EAAA,CAjHKH,QAAQ;EAAA,QACWP,cAAc;AAAA;AAAA4D,GAAA,GADjCrD,QAAQ;AAmHd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAsD,GAAA;AAAAC,YAAA,CAAAvD,EAAA;AAAAuD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}