{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nexport const useSignupContext = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    const response = await fetch('auth/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      setLoading(false);\n      setError(data.message);\n    }\n    if (response.ok) {\n      // LOCAL STORAGE FOR SESSION\n      localStorage.setItem('token', JSON.stringify(data));\n      // update AuthContext\n      dispatch({\n        type: 'LOGIN',\n        payload: data\n      });\n      setLoading(false);\n    }\n  };\n  return {\n    error,\n    loading,\n    signup\n  };\n};\n_s(useSignupContext, \"b7g1FOI0W8KWoD3TM8pqpDC4eEU=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignupContext","_s","error","setError","loading","setLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","localStorage","setItem","type","payload"],"sources":["D:/Projects/Todo-Mern/todo/src/hooks/useSignupContext.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"../context/AuthContext\";\r\n\r\n\r\nexport const useSignupContext = () => {\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(null);\r\n    const {dispatch} = useAuthContext();\r\n\r\n    const signup = async(email, password) =>{\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('auth/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({email, password}),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if(!response.ok){\r\n            setLoading(false);\r\n            setError(data.message);\r\n        }\r\n        if(response.ok){\r\n            // LOCAL STORAGE FOR SESSION\r\n            localStorage.setItem('token', JSON.stringify(data));\r\n            // update AuthContext\r\n            dispatch({type: 'LOGIN', payload: data});\r\n\r\n\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return {error, loading, signup};\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,wBAAwB;AAGvD,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM;IAACQ;EAAQ,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEnC,MAAMQ,MAAM,GAAG,MAAAA,CAAMC,KAAK,EAAEC,QAAQ,KAAI;IACpCJ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAG,CAACR,QAAQ,CAACS,EAAE,EAAC;MACZd,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACc,IAAI,CAACG,OAAO,CAAC;IAC1B;IACA,IAAGV,QAAQ,CAACS,EAAE,EAAC;MACX;MACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MACnD;MACAX,QAAQ,CAAC;QAACiB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEP;MAAI,CAAC,CAAC;MAGxCZ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,OAAO;IAACH,KAAK;IAAEE,OAAO;IAAEG;EAAM,CAAC;AACnC,CAAC;AAAAN,EAAA,CAnCYD,gBAAgB;EAAA,QAGND,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}